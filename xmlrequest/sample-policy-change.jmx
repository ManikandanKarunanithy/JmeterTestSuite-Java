<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.6" jmeter="2.11 r1554548">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Csio Test Requests" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="server-name-app1" elementType="Argument">
            <stringProp name="Argument.name">server-name-app1</stringProp>
            <stringProp name="Argument.value">172.25.29.102</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="projectHome" elementType="Argument">
            <stringProp name="Argument.name">projectHome</stringProp>
            <stringProp name="Argument.value">${__BeanShell(import org.apache.jmeter.services.FileServer; FileServer.getFileServer().getBaseDir();)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="server-name-app2" elementType="Argument">
            <stringProp name="Argument.name">server-name-app2</stringProp>
            <stringProp name="Argument.value">172.25.29.103</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Add Leinholder (Brovada testing)" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stopthread</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <longProp name="ThreadGroup.start_time">1425569452000</longProp>
        <longProp name="ThreadGroup.end_time">1425569452000</longProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <stringProp name="TestPlan.comments">Currently this code writes out the transformed template before it sends it. It is not thread safe.</stringProp>
      </ThreadGroup>
      <hashTree>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Request Parameters. " enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="POLICYKEY" elementType="Argument">
              <stringProp name="Argument.name">POLICYKEY</stringProp>
              <stringProp name="Argument.value">106374A01</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Modifiable - Policy key to add to</stringProp>
            </elementProp>
            <elementProp name="USERID" elementType="Argument">
              <stringProp name="Argument.name">USERID</stringProp>
              <stringProp name="Argument.value">212137557097493</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Modifiable - objectid of the user to make the request as. </stringProp>
            </elementProp>
            <elementProp name="CHANGEDESC" elementType="Argument">
              <stringProp name="Argument.name">CHANGEDESC</stringProp>
              <stringProp name="Argument.value">Jmeter Automated Test</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Modifiable - Change description in the XML</stringProp>
            </elementProp>
            <elementProp name="SBUID" elementType="Argument">
              <stringProp name="Argument.name">SBUID</stringProp>
              <stringProp name="Argument.value">23</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
              <stringProp name="Argument.desc">Modifiable - Sbu Id</stringProp>
            </elementProp>
            <elementProp name="TRANSACTION-DATE" elementType="Argument">
              <stringProp name="Argument.name">TRANSACTION-DATE</stringProp>
              <stringProp name="Argument.value">2015-04-29T00:00:01</stringProp>
              <stringProp name="Argument.desc">Target transaction effective date</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <BeanShellSampler guiclass="BeanShellSamplerGui" testclass="BeanShellSampler" testname="Generate Authorization Header" enabled="true">
          <stringProp name="BeanShellSampler.query">
try {

String authorization=net.mccg.third.party.authorization.AuthGenerator.getAuthorizationHeaderValue(vars.get(&quot;USERID&quot;),&quot;23&quot;,&quot;3FL82ZbkU6zLH3Jr&quot;,&quot;XEOaTiAbJdnFZrbd&quot;);
vars.put(&quot;authorization&quot;,authorization);

}
catch (Excpetion e) {
	log.warn(&quot;Error generating authorization header : &quot; + e.getmessage());
}
</stringProp>
          <stringProp name="BeanShellSampler.filename"></stringProp>
          <stringProp name="BeanShellSampler.parameters"></stringProp>
          <boolProp name="BeanShellSampler.resetInterpreter">false</boolProp>
        </BeanShellSampler>
        <hashTree/>
        <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
          <collectionProp name="HeaderManager.headers">
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mccg-user</stringProp>
              <stringProp name="Header.value">${USERID}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">mccg-sbu</stringProp>
              <stringProp name="Header.value">${SBUID}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Authorization</stringProp>
              <stringProp name="Header.value">${authorization}</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">Content-Type</stringProp>
              <stringProp name="Header.value">application/xml</stringProp>
            </elementProp>
            <elementProp name="" elementType="Header">
              <stringProp name="Header.name">sbuid</stringProp>
              <stringProp name="Header.value">23</stringProp>
            </elementProp>
          </collectionProp>
        </HeaderManager>
        <hashTree/>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Request" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server-name-app2}</stringProp>
          <stringProp name="HTTPSampler.port">9443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">mccg/csio-service-web/csio/pc/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="${projectHome}\ratingsummary.pdf" elementType="HTTPFileArg">
                <stringProp name="File.path">${projectHome}\ratingsummary.pdf</stringProp>
                <stringProp name="File.paramname">ratingsummary.pdf</stringProp>
                <stringProp name="File.mimetype">application/pdf</stringProp>
              </elementProp>
              <elementProp name="${projectHome}\summary.pdf" elementType="HTTPFileArg">
                <stringProp name="File.path">${projectHome}\summary.pdf</stringProp>
                <stringProp name="File.paramname">changeSummary</stringProp>
                <stringProp name="File.mimetype">application/pdf</stringProp>
              </elementProp>
              <elementProp name="${projectHome}\\tmpAutoPolicyModRq_DeleteAdditionalInterest_template.xml" elementType="HTTPFileArg">
                <stringProp name="File.path">${projectHome}\\tmpAutoPolicyModRq_DeleteAdditionalInterest_template.xml</stringProp>
                <stringProp name="File.paramname">csio</stringProp>
                <stringProp name="File.mimetype">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Add Multipart heard" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">multipart/form-data</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Need to add this here since it is specific for this call. </stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Add Request" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain">${server-name-app1}</stringProp>
          <stringProp name="HTTPSampler.port">8443</stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
          <stringProp name="HTTPSampler.protocol">https</stringProp>
          <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
          <stringProp name="HTTPSampler.path">csio-service-web/csio/pc/</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">true</boolProp>
          <stringProp name="HTTPSampler.implementation">HttpClient3.1</stringProp>
          <elementProp name="HTTPsampler.Files" elementType="HTTPFileArgs">
            <collectionProp name="HTTPFileArgs.files">
              <elementProp name="${projectHome}\ratingsummary.pdf" elementType="HTTPFileArg">
                <stringProp name="File.path">${projectHome}\ratingsummary.pdf</stringProp>
                <stringProp name="File.paramname">ratingsummary.pdf</stringProp>
                <stringProp name="File.mimetype">application/pdf</stringProp>
              </elementProp>
              <elementProp name="${projectHome}\summary.pdf" elementType="HTTPFileArg">
                <stringProp name="File.path">${projectHome}\summary.pdf</stringProp>
                <stringProp name="File.paramname">changeSummary</stringProp>
                <stringProp name="File.mimetype">application/pdf</stringProp>
              </elementProp>
              <elementProp name="${projectHome}\\tmpAutoPolicyModRq_DeleteAdditionalInterest_template.xml" elementType="HTTPFileArg">
                <stringProp name="File.path">${projectHome}\\tmpAutoPolicyModRq_DeleteAdditionalInterest_template.xml</stringProp>
                <stringProp name="File.paramname">csio</stringProp>
                <stringProp name="File.mimetype">application/xml</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <boolProp name="HTTPSampler.monitor">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="Add Multipart heard" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-Type</stringProp>
                <stringProp name="Header.value">multipart/form-data</stringProp>
              </elementProp>
            </collectionProp>
            <stringProp name="TestPlan.comments">Need to add this here since it is specific for this call. </stringProp>
          </HeaderManager>
          <hashTree/>
        </hashTree>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <objProp>
            <name></name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>false</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
